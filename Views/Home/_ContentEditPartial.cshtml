@using BookReviewer.Models
@using BookReviewer.Helpers
@using System.Security.Claims

<link href="~/lib/quill/quill.snow.css" rel="stylesheet">

@using (Html.BeginForm("Update","Reviews",FormMethod.Post, new { onsubmit = "return getContent()" }))
{   
    var review = TempData.Get<Review>("Review");
    var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);     
    
    if (review != null && review.AuthorId == userId)
    {
        <div class="form-group">    
            @{var content = review.Content;}
            <input type="hidden" name="id" value="@review.Id">
            <input type="hidden" id="contentForUpdate" name="content" value="@content">
            <div id="quill-container" class="editor">
            </div> 
        </div>    
        <div class="bottom-menu">
        <button class="btn btn-primary" type="submit">Save Review</button>
        </div>          
    }   
}

<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script src="~/lib/quill/quill.js"></script>

<!-- Initialize Quill editor -->
<script> 
$(document).ready(function () {
    setContent();     
});

var quill = new Quill('#quill-container', {
    modules: {
        toolbar: [
            [{ header: [1, 2, 3, false] }],    
            ['bold', 'italic', 'underline'],
            ['blockquote', 'code-block', 'image'],
            [{ 'list': 'ordered'}, { 'list': 'bullet' }],
        ]
    },        
    placeholder: 'Write a book review here...',
    theme: 'snow'
});

// Populating review retrieved
function setContent() {
    var content = $("#contentForUpdate").val();
    var delta = JSON.parse(content);
    quill.setContents(delta, 'silent');  
}

// Getting review on submit
function getContent() {
    // Validation check for the content of the review
    if (!isContentValid(quill)) {
      return false;
    }

    var jsonStringContent = JSON.stringify(quill.getContents());
    var content = document.querySelector('#contentForUpdate');      
    content.value = jsonStringContent;
}  
</script>
