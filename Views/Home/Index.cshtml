@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager

@{
    ViewData["Title"] = "Home";
}

<div class="container">
    <div class="row">
        <div class="col-4 review" >
            @if (SignInManager.IsSignedIn(User))
            {   
                await Html.RenderPartialAsync("_MyReviewPartial");
                <br>
            }
            @{
                await Html.RenderPartialAsync("_ReviewPartial");
            }            
        </div>
        <div id="ReviewContent" class="col-8 rich-text">
            @{
                await Html.RenderPartialAsync("_ContentPartial");
            }        
        </div>
    </div>
</div>
@section Scripts {    
    <script>
        function onReadReview(reviewId) {
            displayLoadingIndicator();      

            $.ajax({
                url: '@Url.Action("Review","Home")',
                type: 'GET',
                data: {id: reviewId},

                // Refreshing Review Content only 
                success: function (response) {
                    hideLoadingIndicator();                    
                    $('#ReviewContent').html(response);
                },
                error: function (response) {
                    hideLoadingIndicator();                       
                    alert(response.responseText);                 
                }
            });
        } 

        // Validation check for the content of the review
        function isContentValid(quill) {
            isValid = true;

            const contentText = quill.getText().replace("\\n", "").trim();
            if (contentText.length == 0){
                isValid = false;
                alert('There is no review to save.');
            }

            return isValid;
        }                   
    </script>
}